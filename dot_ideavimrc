" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

let mapleader=" "

""" IdeaVim options
" Smart join for <C-J>
" set ideajoin

" Map vim marks to IDEA global marks
set ideamarks

" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Use the system clipboard
set clipboard=unnamedplus

" Don't use Ex mode, use Q for formatting.
map Q gq

" Other defaults
set hlsearch
set ignorecase
set smartcase
set visualbell
set showmode
set incsearch
set history=1000

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugine

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
" Entire buffer text object: ae
Plug 'kana/vim-textobj-entire'
" Argument text objects: aa, ia
Plug 'vim-scripts/argtextobj.vim'
" ys, cs, ds, S
Plug 'tpope/vim-surround'

set easymotion
set quickscope
set which-key
set timeoutlen=15000

" Exit insert mode when mashing j
" imap jj <Esc>

" Remove highlight when searching with Enter
nmap <CR> :nohl<CR>


" Paste replaces visual selection without yanking
" vmap p _dP

" "Find next and previous" centres the viewport
nnoremap n nzz
nnoremap N Nzz

" Yank until the end of the line
nnoremap Y y$

" Move to the beginning and end of line naturally
" Do not know if the omaps work
omap L $
omap H ^

nnoremap L $
nnoremap H ^

" Do not override the current register (i.e clipboard) when pasting
" vnoremap p pgvy
xnoremap p pgvy

" Allow selection to the end of line
vnoremap H ^l
vnoremap L $h

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Other actions

" Highlight
" Word under cursor
nnoremap <leader>hw *N
" Select all
nnoremap <leader>he ggVG

" Go
nmap gD <Action>(GotoTypeDeclaration)
nmap gen <Action>(GotoNextError)
nmap geN <Action>(GotoPreviousError)
nmap gt <Action>(GotoTest)
nmap gh <Action>(ShowHoverInfo)
nmap gra <Action>(RunAnything)
nmap gmb <Action>(EditorMatchBrace)

" Run
map <leader>rr <Action>(Rerun)
nmap <leader>rh <Action>(RunClass)

" Search
nmap <leader>sr <Action>(RecentChangedFiles)
nmap <leader>ss <Action>(FileStructurePopup)

" Harpoon
nmap <leader>hm <action>(HarpoonerToggleQuickMenu)
nmap <leader>ha <action>(HarpoonerToggleFile)

nmap <M-j> <Action>(HarpoonerOpenFile0)
nmap <M-k> <Action>(HarpoonerOpenFile1)
nmap <M-l> <Action>(HarpoonerOpenFile2)
nmap <M-;> <Action>(HarpoonerOpenFile3)
" Probably not necessary, but here anyway in the meantime.
nmap <M-a> <Action>(HarpoonerOpenFile4)
nmap <M-s> <Action>(HarpoonerOpenFile5)
nmap <M-d> <Action>(HarpoonerOpenFile6)
nmap <M-f> <Action>(HarpoonerOpenFile7)

nmap <leader>hn <Action>(HarpoonerNextFileAction)
nmap <leader>hp <Action>(HarpoonerPreviousFileAction)

nmap <leader>hc <Action>(HarpoonerClearMenu)

" Easymotion
let g:EasyMotion_do_mapping

nmap <leader>j <Plug>(easymotion-prefix)
nmap <leader>j/ <Plug>(easymotion-f)
nmap <leader>j? <Plug>(easymotion-F)
nmap <leader>je <Plug>(easymotion-bd-el)
nmap <leader>jb <Plug>(easymotion-bd-bl)
nmap <leader>jj <Plug>(easymotion-j)
nmap <leader>jk <Plug>(easymotion-k)
